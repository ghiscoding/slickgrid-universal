name: Framework Tests - Vue

on:
  push:
    branches:
      - master
      - next
  pull_request:
    branches:
      - '**'
    paths-ignore:
      - '**.md'
      - '!.github/workflows/ci.yml'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run:
    strategy:
      fail-fast: false
      matrix:
        node: [24]
        platform:
          - ubuntu-latest

    name: '${{matrix.platform}} / Node ${{ matrix.node }}'
    runs-on: ${{matrix.platform}}
    if: ${{ !startsWith(github.event.head_commit.message, 'docs:') }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10
          run_install: false

      - name: Set NodeJS
        uses: actions/setup-node@v6
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - run: pnpm --version

      - name: Install pnpm dependencies
        run: pnpm install

      - name: Build Slickgrid-Universal packages
        run: pnpm build:universal

      - name: Slickgrid-Vue Framework Build
        run: pnpm vue:build:framework

      - name: Website Dev Build (served for Cypress)
        run: pnpm vue:build:demo

      - name: Cache Cypress binary
        uses: actions/cache@v4
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-cypress-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-cypress-

      - name: Ensure Cypress binary is installed
        run: pnpm exec cypress install

      - name: Start HTTP Server
        run: pnpm vue:serve &

      - name: Run Cypress E2E tests
        uses: cypress-io/github-action@v6
        with:
          install: false
          working-directory: demos/vue
          # start: pnpm vue:serve
          wait-on: 'http://localhost:7000'
          config-file: test/cypress.config.mjs
          browser: chrome
          record: false
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          Cypress_extended: true

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: test/cypress/screenshots
